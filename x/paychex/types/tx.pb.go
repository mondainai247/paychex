// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: paychex/paychex/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateEmployee struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Role    *Role  `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (m *MsgCreateEmployee) Reset()         { *m = MsgCreateEmployee{} }
func (m *MsgCreateEmployee) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEmployee) ProtoMessage()    {}
func (*MsgCreateEmployee) Descriptor() ([]byte, []int) {
	return fileDescriptor_860507033d6aa34a, []int{0}
}
func (m *MsgCreateEmployee) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEmployee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEmployee.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEmployee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEmployee.Merge(m, src)
}
func (m *MsgCreateEmployee) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEmployee) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEmployee.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEmployee proto.InternalMessageInfo

func (m *MsgCreateEmployee) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateEmployee) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateEmployee) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type MsgCreateEmployeeResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateEmployeeResponse) Reset()         { *m = MsgCreateEmployeeResponse{} }
func (m *MsgCreateEmployeeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEmployeeResponse) ProtoMessage()    {}
func (*MsgCreateEmployeeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_860507033d6aa34a, []int{1}
}
func (m *MsgCreateEmployeeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEmployeeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEmployeeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEmployeeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEmployeeResponse.Merge(m, src)
}
func (m *MsgCreateEmployeeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEmployeeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEmployeeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEmployeeResponse proto.InternalMessageInfo

func (m *MsgCreateEmployeeResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateEmployee struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Role    *Role  `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (m *MsgUpdateEmployee) Reset()         { *m = MsgUpdateEmployee{} }
func (m *MsgUpdateEmployee) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEmployee) ProtoMessage()    {}
func (*MsgUpdateEmployee) Descriptor() ([]byte, []int) {
	return fileDescriptor_860507033d6aa34a, []int{2}
}
func (m *MsgUpdateEmployee) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEmployee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEmployee.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEmployee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEmployee.Merge(m, src)
}
func (m *MsgUpdateEmployee) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEmployee) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEmployee.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEmployee proto.InternalMessageInfo

func (m *MsgUpdateEmployee) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateEmployee) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateEmployee) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgUpdateEmployee) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type MsgUpdateEmployeeResponse struct {
}

func (m *MsgUpdateEmployeeResponse) Reset()         { *m = MsgUpdateEmployeeResponse{} }
func (m *MsgUpdateEmployeeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEmployeeResponse) ProtoMessage()    {}
func (*MsgUpdateEmployeeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_860507033d6aa34a, []int{3}
}
func (m *MsgUpdateEmployeeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEmployeeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEmployeeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEmployeeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEmployeeResponse.Merge(m, src)
}
func (m *MsgUpdateEmployeeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEmployeeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEmployeeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEmployeeResponse proto.InternalMessageInfo

type MsgDeleteEmployee struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteEmployee) Reset()         { *m = MsgDeleteEmployee{} }
func (m *MsgDeleteEmployee) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteEmployee) ProtoMessage()    {}
func (*MsgDeleteEmployee) Descriptor() ([]byte, []int) {
	return fileDescriptor_860507033d6aa34a, []int{4}
}
func (m *MsgDeleteEmployee) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteEmployee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteEmployee.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteEmployee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteEmployee.Merge(m, src)
}
func (m *MsgDeleteEmployee) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteEmployee) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteEmployee.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteEmployee proto.InternalMessageInfo

func (m *MsgDeleteEmployee) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteEmployee) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteEmployeeResponse struct {
}

func (m *MsgDeleteEmployeeResponse) Reset()         { *m = MsgDeleteEmployeeResponse{} }
func (m *MsgDeleteEmployeeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteEmployeeResponse) ProtoMessage()    {}
func (*MsgDeleteEmployeeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_860507033d6aa34a, []int{5}
}
func (m *MsgDeleteEmployeeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteEmployeeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteEmployeeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteEmployeeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteEmployeeResponse.Merge(m, src)
}
func (m *MsgDeleteEmployeeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteEmployeeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteEmployeeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteEmployeeResponse proto.InternalMessageInfo

type MsgCreateQueryResponse struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Staff   *Staff `protobuf:"bytes,2,opt,name=staff,proto3" json:"staff,omitempty"`
}

func (m *MsgCreateQueryResponse) Reset()         { *m = MsgCreateQueryResponse{} }
func (m *MsgCreateQueryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateQueryResponse) ProtoMessage()    {}
func (*MsgCreateQueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_860507033d6aa34a, []int{6}
}
func (m *MsgCreateQueryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateQueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateQueryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateQueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateQueryResponse.Merge(m, src)
}
func (m *MsgCreateQueryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateQueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateQueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateQueryResponse proto.InternalMessageInfo

func (m *MsgCreateQueryResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateQueryResponse) GetStaff() *Staff {
	if m != nil {
		return m.Staff
	}
	return nil
}

type MsgCreateQueryResponseResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateQueryResponseResponse) Reset()         { *m = MsgCreateQueryResponseResponse{} }
func (m *MsgCreateQueryResponseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateQueryResponseResponse) ProtoMessage()    {}
func (*MsgCreateQueryResponseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_860507033d6aa34a, []int{7}
}
func (m *MsgCreateQueryResponseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateQueryResponseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateQueryResponseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateQueryResponseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateQueryResponseResponse.Merge(m, src)
}
func (m *MsgCreateQueryResponseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateQueryResponseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateQueryResponseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateQueryResponseResponse proto.InternalMessageInfo

func (m *MsgCreateQueryResponseResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateQueryResponse struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Staff   *Staff `protobuf:"bytes,3,opt,name=staff,proto3" json:"staff,omitempty"`
}

func (m *MsgUpdateQueryResponse) Reset()         { *m = MsgUpdateQueryResponse{} }
func (m *MsgUpdateQueryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateQueryResponse) ProtoMessage()    {}
func (*MsgUpdateQueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_860507033d6aa34a, []int{8}
}
func (m *MsgUpdateQueryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateQueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateQueryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateQueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateQueryResponse.Merge(m, src)
}
func (m *MsgUpdateQueryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateQueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateQueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateQueryResponse proto.InternalMessageInfo

func (m *MsgUpdateQueryResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateQueryResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateQueryResponse) GetStaff() *Staff {
	if m != nil {
		return m.Staff
	}
	return nil
}

type MsgUpdateQueryResponseResponse struct {
}

func (m *MsgUpdateQueryResponseResponse) Reset()         { *m = MsgUpdateQueryResponseResponse{} }
func (m *MsgUpdateQueryResponseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateQueryResponseResponse) ProtoMessage()    {}
func (*MsgUpdateQueryResponseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_860507033d6aa34a, []int{9}
}
func (m *MsgUpdateQueryResponseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateQueryResponseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateQueryResponseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateQueryResponseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateQueryResponseResponse.Merge(m, src)
}
func (m *MsgUpdateQueryResponseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateQueryResponseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateQueryResponseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateQueryResponseResponse proto.InternalMessageInfo

type MsgDeleteQueryResponse struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteQueryResponse) Reset()         { *m = MsgDeleteQueryResponse{} }
func (m *MsgDeleteQueryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteQueryResponse) ProtoMessage()    {}
func (*MsgDeleteQueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_860507033d6aa34a, []int{10}
}
func (m *MsgDeleteQueryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteQueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteQueryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteQueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteQueryResponse.Merge(m, src)
}
func (m *MsgDeleteQueryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteQueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteQueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteQueryResponse proto.InternalMessageInfo

func (m *MsgDeleteQueryResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteQueryResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteQueryResponseResponse struct {
}

func (m *MsgDeleteQueryResponseResponse) Reset()         { *m = MsgDeleteQueryResponseResponse{} }
func (m *MsgDeleteQueryResponseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteQueryResponseResponse) ProtoMessage()    {}
func (*MsgDeleteQueryResponseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_860507033d6aa34a, []int{11}
}
func (m *MsgDeleteQueryResponseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteQueryResponseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteQueryResponseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteQueryResponseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteQueryResponseResponse.Merge(m, src)
}
func (m *MsgDeleteQueryResponseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteQueryResponseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteQueryResponseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteQueryResponseResponse proto.InternalMessageInfo

type MsgSendPayroll struct {
	Creator    string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Newpayroll *Payroll `protobuf:"bytes,2,opt,name=newpayroll,proto3" json:"newpayroll,omitempty"`
}

func (m *MsgSendPayroll) Reset()         { *m = MsgSendPayroll{} }
func (m *MsgSendPayroll) String() string { return proto.CompactTextString(m) }
func (*MsgSendPayroll) ProtoMessage()    {}
func (*MsgSendPayroll) Descriptor() ([]byte, []int) {
	return fileDescriptor_860507033d6aa34a, []int{12}
}
func (m *MsgSendPayroll) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSendPayroll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSendPayroll.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSendPayroll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSendPayroll.Merge(m, src)
}
func (m *MsgSendPayroll) XXX_Size() int {
	return m.Size()
}
func (m *MsgSendPayroll) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSendPayroll.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSendPayroll proto.InternalMessageInfo

func (m *MsgSendPayroll) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSendPayroll) GetNewpayroll() *Payroll {
	if m != nil {
		return m.Newpayroll
	}
	return nil
}

type MsgSendPayrollResponse struct {
}

func (m *MsgSendPayrollResponse) Reset()         { *m = MsgSendPayrollResponse{} }
func (m *MsgSendPayrollResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSendPayrollResponse) ProtoMessage()    {}
func (*MsgSendPayrollResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_860507033d6aa34a, []int{13}
}
func (m *MsgSendPayrollResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSendPayrollResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSendPayrollResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSendPayrollResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSendPayrollResponse.Merge(m, src)
}
func (m *MsgSendPayrollResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSendPayrollResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSendPayrollResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSendPayrollResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateEmployee)(nil), "paychex.paychex.MsgCreateEmployee")
	proto.RegisterType((*MsgCreateEmployeeResponse)(nil), "paychex.paychex.MsgCreateEmployeeResponse")
	proto.RegisterType((*MsgUpdateEmployee)(nil), "paychex.paychex.MsgUpdateEmployee")
	proto.RegisterType((*MsgUpdateEmployeeResponse)(nil), "paychex.paychex.MsgUpdateEmployeeResponse")
	proto.RegisterType((*MsgDeleteEmployee)(nil), "paychex.paychex.MsgDeleteEmployee")
	proto.RegisterType((*MsgDeleteEmployeeResponse)(nil), "paychex.paychex.MsgDeleteEmployeeResponse")
	proto.RegisterType((*MsgCreateQueryResponse)(nil), "paychex.paychex.MsgCreateQueryResponse")
	proto.RegisterType((*MsgCreateQueryResponseResponse)(nil), "paychex.paychex.MsgCreateQueryResponseResponse")
	proto.RegisterType((*MsgUpdateQueryResponse)(nil), "paychex.paychex.MsgUpdateQueryResponse")
	proto.RegisterType((*MsgUpdateQueryResponseResponse)(nil), "paychex.paychex.MsgUpdateQueryResponseResponse")
	proto.RegisterType((*MsgDeleteQueryResponse)(nil), "paychex.paychex.MsgDeleteQueryResponse")
	proto.RegisterType((*MsgDeleteQueryResponseResponse)(nil), "paychex.paychex.MsgDeleteQueryResponseResponse")
	proto.RegisterType((*MsgSendPayroll)(nil), "paychex.paychex.MsgSendPayroll")
	proto.RegisterType((*MsgSendPayrollResponse)(nil), "paychex.paychex.MsgSendPayrollResponse")
}

func init() { proto.RegisterFile("paychex/paychex/tx.proto", fileDescriptor_860507033d6aa34a) }

var fileDescriptor_860507033d6aa34a = []byte{
	// 530 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xcf, 0x6f, 0xd3, 0x30,
	0x18, 0x6d, 0xda, 0x0e, 0xc4, 0x57, 0xa9, 0x08, 0x23, 0x46, 0xc8, 0x84, 0xa9, 0x22, 0xa4, 0x8e,
	0x1f, 0xca, 0xa0, 0x5c, 0xb8, 0x70, 0x19, 0x70, 0xac, 0x04, 0x99, 0x10, 0x12, 0x17, 0x1a, 0x16,
	0xaf, 0x4c, 0xca, 0x62, 0x93, 0x04, 0xb1, 0x48, 0xfc, 0x11, 0xfc, 0x59, 0x1c, 0x77, 0x83, 0x23,
	0x6a, 0xff, 0x11, 0x14, 0xc7, 0xb6, 0x12, 0xc7, 0x69, 0xa3, 0x9e, 0xd2, 0xfa, 0x7b, 0xfe, 0xde,
	0xf3, 0xfb, 0xfc, 0x64, 0xb0, 0x59, 0x90, 0x9f, 0x7e, 0x25, 0x97, 0x47, 0xf2, 0x9b, 0x5d, 0x7a,
	0x2c, 0xa1, 0x19, 0x45, 0x37, 0xc5, 0x8a, 0x27, 0xbe, 0x0e, 0xd6, 0xa1, 0xe4, 0x82, 0x45, 0x34,
	0x27, 0xa4, 0xdc, 0xe0, 0x38, 0x7a, 0x3d, 0xa1, 0x91, 0xac, 0x3d, 0xd4, 0x6b, 0xdf, 0xbe, 0x93,
	0x24, 0xff, 0x9c, 0x90, 0x94, 0xd1, 0x38, 0x95, 0xa8, 0x03, 0x1d, 0x95, 0x66, 0xc1, 0xd9, 0x99,
	0x28, 0xde, 0xd7, 0x8b, 0x2c, 0xc8, 0x13, 0x1a, 0x45, 0x65, 0xd9, 0x8d, 0xe0, 0xd6, 0x3c, 0x5d,
	0xbe, 0x4e, 0x48, 0x90, 0x91, 0xb7, 0x42, 0x18, 0xb2, 0xe1, 0xfa, 0x69, 0xb1, 0x42, 0x13, 0xdb,
	0x9a, 0x58, 0x87, 0x37, 0x7c, 0xf9, 0x17, 0x21, 0x18, 0xc6, 0xc1, 0x05, 0xb1, 0xfb, 0x7c, 0x99,
	0xff, 0x46, 0x8f, 0x60, 0x58, 0x48, 0xb6, 0x07, 0x13, 0xeb, 0x70, 0x34, 0xbb, 0xe3, 0x69, 0x06,
	0x78, 0x3e, 0x8d, 0x88, 0xcf, 0x21, 0xee, 0x13, 0xb8, 0xd7, 0x60, 0xf3, 0xc5, 0x61, 0xd0, 0x18,
	0xfa, 0xe7, 0x21, 0x27, 0x1c, 0xfa, 0xfd, 0xf3, 0xd0, 0xfd, 0xc9, 0xa5, 0x7d, 0x60, 0x61, 0x37,
	0x69, 0xe5, 0xf6, 0xbe, 0xdc, 0xae, 0xa4, 0x0e, 0x0c, 0x52, 0x87, 0xdb, 0xa5, 0x1e, 0x70, 0xa9,
	0x75, 0x76, 0x29, 0xd5, 0x7d, 0xc5, 0xa5, 0xbd, 0x21, 0x11, 0xd9, 0x45, 0x9a, 0xe8, 0x5d, 0xdf,
	0xae, 0x7a, 0x2f, 0x60, 0x5f, 0x79, 0xf4, 0xbe, 0x18, 0xb7, 0x32, 0xa8, 0x9d, 0xe0, 0x29, 0xec,
	0xf1, 0x99, 0x73, 0x8e, 0xd1, 0x6c, 0xbf, 0x71, 0xb0, 0x93, 0xa2, 0xea, 0x97, 0x20, 0xf7, 0x19,
	0x60, 0x33, 0x43, 0xeb, 0x28, 0x18, 0xd7, 0x54, 0x9a, 0xd1, 0x55, 0x93, 0x3e, 0x0f, 0xa5, 0x71,
	0xd0, 0x45, 0xe3, 0x84, 0x6b, 0x34, 0x30, 0x2a, 0x9f, 0x8e, 0xb9, 0xa6, 0xd2, 0xc4, 0x1d, 0x35,
	0x09, 0x16, 0x43, 0x0f, 0xc5, 0x12, 0xc2, 0x78, 0x9e, 0x2e, 0x4f, 0x48, 0x1c, 0xbe, 0x2b, 0x73,
	0xb3, 0xa1, 0xfb, 0x4b, 0x80, 0x98, 0xfc, 0x10, 0xf9, 0x12, 0xa3, 0xb0, 0x1b, 0xc7, 0x14, 0x7d,
	0xfc, 0x0a, 0xd6, 0xb5, 0xf9, 0x59, 0x2a, 0x2c, 0x92, 0x7f, 0xf6, 0x67, 0x0f, 0x06, 0xf3, 0x74,
	0x89, 0x16, 0x30, 0xd6, 0x42, 0xea, 0x36, 0x3a, 0x37, 0xa2, 0xe5, 0x3c, 0xde, 0x8e, 0x51, 0xae,
	0x2d, 0x60, 0xac, 0x65, 0xcd, 0xc8, 0x50, 0xc7, 0x98, 0x19, 0xcc, 0xa9, 0x29, 0x18, 0xb4, 0xc8,
	0x18, 0x19, 0xea, 0x18, 0x33, 0x83, 0x39, 0x3b, 0x88, 0xc2, 0x6d, 0x53, 0x70, 0xa6, 0xed, 0x36,
	0xd4, 0x80, 0xce, 0x51, 0x47, 0x60, 0x95, 0xd0, 0x94, 0x8a, 0x69, 0xbb, 0x2b, 0x1d, 0x08, 0x37,
	0xdc, 0xfa, 0x82, 0xd0, 0x74, 0xe5, 0xa7, 0xed, 0x26, 0x75, 0x20, 0xdc, 0x10, 0x00, 0xf4, 0x11,
	0x46, 0xd5, 0xdb, 0xff, 0xc0, 0xb4, 0xbf, 0x02, 0x70, 0xa6, 0x5b, 0x00, 0xb2, 0xf1, 0xf1, 0xf3,
	0xdf, 0x2b, 0x6c, 0x5d, 0xad, 0xb0, 0xf5, 0x6f, 0x85, 0xad, 0x5f, 0x6b, 0xdc, 0xbb, 0x5a, 0xe3,
	0xde, 0xdf, 0x35, 0xee, 0x7d, 0xba, 0x2b, 0x9f, 0xaa, 0xca, 0xf3, 0x9a, 0x33, 0x92, 0x7e, 0xb9,
	0xc6, 0xdf, 0xac, 0x17, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x09, 0xff, 0x70, 0x7e, 0x07,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateEmployee(ctx context.Context, in *MsgCreateEmployee, opts ...grpc.CallOption) (*MsgCreateEmployeeResponse, error)
	UpdateEmployee(ctx context.Context, in *MsgUpdateEmployee, opts ...grpc.CallOption) (*MsgUpdateEmployeeResponse, error)
	DeleteEmployee(ctx context.Context, in *MsgDeleteEmployee, opts ...grpc.CallOption) (*MsgDeleteEmployeeResponse, error)
	CreateQueryResponse(ctx context.Context, in *MsgCreateQueryResponse, opts ...grpc.CallOption) (*MsgCreateQueryResponseResponse, error)
	UpdateQueryResponse(ctx context.Context, in *MsgUpdateQueryResponse, opts ...grpc.CallOption) (*MsgUpdateQueryResponseResponse, error)
	DeleteQueryResponse(ctx context.Context, in *MsgDeleteQueryResponse, opts ...grpc.CallOption) (*MsgDeleteQueryResponseResponse, error)
	SendPayroll(ctx context.Context, in *MsgSendPayroll, opts ...grpc.CallOption) (*MsgSendPayrollResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateEmployee(ctx context.Context, in *MsgCreateEmployee, opts ...grpc.CallOption) (*MsgCreateEmployeeResponse, error) {
	out := new(MsgCreateEmployeeResponse)
	err := c.cc.Invoke(ctx, "/paychex.paychex.Msg/CreateEmployee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateEmployee(ctx context.Context, in *MsgUpdateEmployee, opts ...grpc.CallOption) (*MsgUpdateEmployeeResponse, error) {
	out := new(MsgUpdateEmployeeResponse)
	err := c.cc.Invoke(ctx, "/paychex.paychex.Msg/UpdateEmployee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteEmployee(ctx context.Context, in *MsgDeleteEmployee, opts ...grpc.CallOption) (*MsgDeleteEmployeeResponse, error) {
	out := new(MsgDeleteEmployeeResponse)
	err := c.cc.Invoke(ctx, "/paychex.paychex.Msg/DeleteEmployee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateQueryResponse(ctx context.Context, in *MsgCreateQueryResponse, opts ...grpc.CallOption) (*MsgCreateQueryResponseResponse, error) {
	out := new(MsgCreateQueryResponseResponse)
	err := c.cc.Invoke(ctx, "/paychex.paychex.Msg/CreateQueryResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateQueryResponse(ctx context.Context, in *MsgUpdateQueryResponse, opts ...grpc.CallOption) (*MsgUpdateQueryResponseResponse, error) {
	out := new(MsgUpdateQueryResponseResponse)
	err := c.cc.Invoke(ctx, "/paychex.paychex.Msg/UpdateQueryResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteQueryResponse(ctx context.Context, in *MsgDeleteQueryResponse, opts ...grpc.CallOption) (*MsgDeleteQueryResponseResponse, error) {
	out := new(MsgDeleteQueryResponseResponse)
	err := c.cc.Invoke(ctx, "/paychex.paychex.Msg/DeleteQueryResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SendPayroll(ctx context.Context, in *MsgSendPayroll, opts ...grpc.CallOption) (*MsgSendPayrollResponse, error) {
	out := new(MsgSendPayrollResponse)
	err := c.cc.Invoke(ctx, "/paychex.paychex.Msg/SendPayroll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateEmployee(context.Context, *MsgCreateEmployee) (*MsgCreateEmployeeResponse, error)
	UpdateEmployee(context.Context, *MsgUpdateEmployee) (*MsgUpdateEmployeeResponse, error)
	DeleteEmployee(context.Context, *MsgDeleteEmployee) (*MsgDeleteEmployeeResponse, error)
	CreateQueryResponse(context.Context, *MsgCreateQueryResponse) (*MsgCreateQueryResponseResponse, error)
	UpdateQueryResponse(context.Context, *MsgUpdateQueryResponse) (*MsgUpdateQueryResponseResponse, error)
	DeleteQueryResponse(context.Context, *MsgDeleteQueryResponse) (*MsgDeleteQueryResponseResponse, error)
	SendPayroll(context.Context, *MsgSendPayroll) (*MsgSendPayrollResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateEmployee(ctx context.Context, req *MsgCreateEmployee) (*MsgCreateEmployeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEmployee not implemented")
}
func (*UnimplementedMsgServer) UpdateEmployee(ctx context.Context, req *MsgUpdateEmployee) (*MsgUpdateEmployeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEmployee not implemented")
}
func (*UnimplementedMsgServer) DeleteEmployee(ctx context.Context, req *MsgDeleteEmployee) (*MsgDeleteEmployeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEmployee not implemented")
}
func (*UnimplementedMsgServer) CreateQueryResponse(ctx context.Context, req *MsgCreateQueryResponse) (*MsgCreateQueryResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQueryResponse not implemented")
}
func (*UnimplementedMsgServer) UpdateQueryResponse(ctx context.Context, req *MsgUpdateQueryResponse) (*MsgUpdateQueryResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateQueryResponse not implemented")
}
func (*UnimplementedMsgServer) DeleteQueryResponse(ctx context.Context, req *MsgDeleteQueryResponse) (*MsgDeleteQueryResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteQueryResponse not implemented")
}
func (*UnimplementedMsgServer) SendPayroll(ctx context.Context, req *MsgSendPayroll) (*MsgSendPayrollResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendPayroll not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateEmployee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateEmployee)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateEmployee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paychex.paychex.Msg/CreateEmployee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateEmployee(ctx, req.(*MsgCreateEmployee))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateEmployee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateEmployee)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateEmployee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paychex.paychex.Msg/UpdateEmployee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateEmployee(ctx, req.(*MsgUpdateEmployee))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteEmployee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteEmployee)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteEmployee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paychex.paychex.Msg/DeleteEmployee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteEmployee(ctx, req.(*MsgDeleteEmployee))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateQueryResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateQueryResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateQueryResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paychex.paychex.Msg/CreateQueryResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateQueryResponse(ctx, req.(*MsgCreateQueryResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateQueryResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateQueryResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateQueryResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paychex.paychex.Msg/UpdateQueryResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateQueryResponse(ctx, req.(*MsgUpdateQueryResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteQueryResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteQueryResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteQueryResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paychex.paychex.Msg/DeleteQueryResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteQueryResponse(ctx, req.(*MsgDeleteQueryResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SendPayroll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSendPayroll)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SendPayroll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/paychex.paychex.Msg/SendPayroll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SendPayroll(ctx, req.(*MsgSendPayroll))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "paychex.paychex.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEmployee",
			Handler:    _Msg_CreateEmployee_Handler,
		},
		{
			MethodName: "UpdateEmployee",
			Handler:    _Msg_UpdateEmployee_Handler,
		},
		{
			MethodName: "DeleteEmployee",
			Handler:    _Msg_DeleteEmployee_Handler,
		},
		{
			MethodName: "CreateQueryResponse",
			Handler:    _Msg_CreateQueryResponse_Handler,
		},
		{
			MethodName: "UpdateQueryResponse",
			Handler:    _Msg_UpdateQueryResponse_Handler,
		},
		{
			MethodName: "DeleteQueryResponse",
			Handler:    _Msg_DeleteQueryResponse_Handler,
		},
		{
			MethodName: "SendPayroll",
			Handler:    _Msg_SendPayroll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "paychex/paychex/tx.proto",
}

func (m *MsgCreateEmployee) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEmployee) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEmployee) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Role != nil {
		{
			size, err := m.Role.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateEmployeeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEmployeeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEmployeeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEmployee) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEmployee) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEmployee) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Role != nil {
		{
			size, err := m.Role.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEmployeeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEmployeeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEmployeeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteEmployee) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteEmployee) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteEmployee) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteEmployeeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteEmployeeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteEmployeeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateQueryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateQueryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateQueryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Staff != nil {
		{
			size, err := m.Staff.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateQueryResponseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateQueryResponseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateQueryResponseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateQueryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateQueryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateQueryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Staff != nil {
		{
			size, err := m.Staff.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateQueryResponseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateQueryResponseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateQueryResponseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteQueryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteQueryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteQueryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteQueryResponseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteQueryResponseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteQueryResponseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSendPayroll) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSendPayroll) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSendPayroll) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Newpayroll != nil {
		{
			size, err := m.Newpayroll.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSendPayrollResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSendPayrollResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSendPayrollResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateEmployee) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Role != nil {
		l = m.Role.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateEmployeeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateEmployee) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Role != nil {
		l = m.Role.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateEmployeeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteEmployee) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteEmployeeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateQueryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Staff != nil {
		l = m.Staff.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateQueryResponseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateQueryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.Staff != nil {
		l = m.Staff.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateQueryResponseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteQueryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteQueryResponseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSendPayroll) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Newpayroll != nil {
		l = m.Newpayroll.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSendPayrollResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateEmployee) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEmployee: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEmployee: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Role == nil {
				m.Role = &Role{}
			}
			if err := m.Role.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEmployeeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEmployeeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEmployeeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEmployee) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEmployee: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEmployee: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Role == nil {
				m.Role = &Role{}
			}
			if err := m.Role.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEmployeeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEmployeeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEmployeeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteEmployee) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteEmployee: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteEmployee: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteEmployeeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteEmployeeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteEmployeeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateQueryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateQueryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateQueryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Staff", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Staff == nil {
				m.Staff = &Staff{}
			}
			if err := m.Staff.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateQueryResponseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateQueryResponseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateQueryResponseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateQueryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateQueryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateQueryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Staff", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Staff == nil {
				m.Staff = &Staff{}
			}
			if err := m.Staff.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateQueryResponseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateQueryResponseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateQueryResponseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteQueryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteQueryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteQueryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteQueryResponseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteQueryResponseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteQueryResponseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSendPayroll) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSendPayroll: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSendPayroll: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Newpayroll", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Newpayroll == nil {
				m.Newpayroll = &Payroll{}
			}
			if err := m.Newpayroll.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSendPayrollResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSendPayrollResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSendPayrollResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
